<?xml version="1.0" encoding="UTF-8" standalone="no"?><Program><VarDecls/><Functions><Function>calculate<ID>a real out: false</ID><ID>b real out: false</ID><ID>op string out: false</ID>realreal<Body><VarDecl><VarSingleDecl><ID>result null out: false</ID>real</VarSingleDecl></VarDecl><VarDecl><VarSingleDecl><ID>cicco null out: false</ID>integer</VarSingleDecl></VarDecl><Assign><ID>cicco null out: false</ID><Expr><Const>3</Const>integer</Expr></Assign><If><Expr><Expr><ID>op null out: false</ID>id</Expr>eq<Expr><Const>+</Const>string</Expr></Expr><Body><Assign><ID>result null out: false</ID><Expr><Expr><ID>a null out: false</ID>id</Expr>add<Expr><ID>b null out: false</ID>id</Expr></Expr></Assign></Body><Elif><Expr><Expr><ID>op null out: false</ID>id</Expr>eq<Expr><Const>-</Const>string</Expr></Expr><Body><Assign><ID>result null out: false</ID><Expr><Expr><ID>a null out: false</ID>id</Expr>sub<Expr><ID>b null out: false</ID>id</Expr></Expr></Assign></Body></Elif><Elif><Expr><Expr><ID>op null out: false</ID>id</Expr>eq<Expr><Const>*</Const>string</Expr></Expr><Body><Assign><ID>result null out: false</ID><Expr><Expr><ID>a null out: false</ID>id</Expr>times<Expr><ID>b null out: false</ID>id</Expr></Expr></Assign></Body></Elif><Elif><Expr><Expr><ID>op null out: false</ID>id</Expr>eq<Expr><Const>/</Const>string</Expr></Expr><Body><Assign><ID>result null out: false</ID><Expr><Expr><ID>a null out: false</ID>id</Expr>div<Expr><ID>b null out: false</ID>id</Expr></Expr></Assign></Body></Elif></If><Return><Expr><ID>result null out: false</ID>id</Expr><Expr><ID>result null out: false</ID>id</Expr></Return></Body></Function><Function>calculatee<ID>a real out: false</ID><ID>b real out: false</ID><ID>op string out: false</ID><ID>continue string out: false</ID>realrealrealrealrealrealrealrealrealreal<Body><VarDecl><VarSingleDecl><ID>result null out: false</ID>real</VarSingleDecl></VarDecl><VarDecl><VarSingleDecl><ID>cicco null out: false</ID>integer</VarSingleDecl></VarDecl><VarDecl><VarSingleDecl><ID>return25 null out: false</ID>real</VarSingleDecl></VarDecl><VarDecl><VarSingleDecl><ID>continuee null out: false</ID>string</VarSingleDecl></VarDecl><Assign><ID>cicco null out: false</ID><Expr><Const>3</Const>integer</Expr></Assign><If><Expr><Expr><ID>op null out: false</ID>id</Expr>eq<Expr><Const>+</Const>string</Expr></Expr><Body><Assign><ID>result null out: false</ID><Expr><Expr><ID>a null out: false</ID>id</Expr>add<Expr><ID>b null out: false</ID>id</Expr></Expr></Assign></Body><Elif><Expr><Expr><ID>op null out: false</ID>id</Expr>eq<Expr><Const>-</Const>string</Expr></Expr><Body><Assign><ID>result null out: false</ID><Expr><Expr><ID>a null out: false</ID>id</Expr>sub<Expr><ID>b null out: false</ID>id</Expr></Expr></Assign></Body></Elif><Elif><Expr><Expr><ID>op null out: false</ID>id</Expr>eq<Expr><Const>*</Const>string</Expr></Expr><Body><Assign><ID>result null out: false</ID><Expr><Expr><ID>a null out: false</ID>id</Expr>times<Expr><ID>b null out: false</ID>id</Expr></Expr></Assign></Body></Elif><Elif><Expr><Expr><ID>op null out: false</ID>id</Expr>eq<Expr><Const>/</Const>string</Expr></Expr><Body><Assign><ID>result null out: false</ID><Expr><Expr><ID>a null out: false</ID>id</Expr>div<Expr><ID>b null out: false</ID>id</Expr></Expr></Assign></Body></Elif></If><Return><Expr><ID>result null out: false</ID>id</Expr><Expr><ID>result null out: false</ID>id</Expr><Expr><ID>result null out: false</ID>id</Expr><Expr><ID>result null out: false</ID>id</Expr><Expr><ID>result null out: false</ID>id</Expr><Expr><ID>result null out: false</ID>id</Expr><Expr><ID>result null out: false</ID>id</Expr><Expr><ID>result null out: false</ID>id</Expr><Expr><ID>result null out: false</ID>id</Expr><Expr><ID>result null out: false</ID>id</Expr></Return></Body></Function></Functions><Procedures><Procedure>main<Body><VarDecl><VarSingleDecl><ID>a null out: false</ID><ID>b null out: false</ID><ID>result null out: false</ID>real</VarSingleDecl><VarSingleDecl><ID>op null out: false</ID>string</VarSingleDecl><VarSingleDecl><ID>continue null out: false</ID><Const>true</Const></VarSingleDecl></VarDecl><ProcCall>loop<ProcArgument>ref: a</ProcArgument><ProcArgument>ref: b</ProcArgument><ProcArgument>ref: result</ProcArgument><ProcArgument>ref: op</ProcArgument><ProcArgument>ref: continue</ProcArgument></ProcCall></Body></Procedure><Procedure>loop<ID>a real out: true</ID><ID>b real out: true</ID><ID>result real out: true</ID><ID>op string out: true</ID><ID>continue boolean out: true</ID><Body><VarDecl><VarSingleDecl><ID>z null out: false</ID><Const>2</Const></VarSingleDecl></VarDecl><While><Expr><Expr><ID>continue null out: false</ID>id</Expr>eq<Expr><Const>true</Const>true</Expr></Expr><Body><Read><Expr><Const>Che operazione aritmetica vuoi svolgere? (+, -, *, /)    </Const>string</Expr><Expr><ID>op null out: false</ID>id</Expr></Read><While><Expr><Expr><Expr><Expr><Expr><ID>op null out: false</ID>id</Expr>ne<Expr><Const>+</Const>string</Expr></Expr>and<Expr><Expr><ID>op null out: false</ID>id</Expr>ne<Expr><Const>-</Const>string</Expr></Expr></Expr>and<Expr><Expr><ID>op null out: false</ID>id</Expr>ne<Expr><Const>*</Const>string</Expr></Expr></Expr>and<Expr><Expr><ID>op null out: false</ID>id</Expr>ne<Expr><Const>/</Const>string</Expr></Expr></Expr><Body><Read><Expr><Const>Devi inserire un'operazione aritmetica consentita (+, -, *, /)    </Const>string</Expr><Expr><ID>op null out: false</ID>id</Expr></Read></Body></While><Read><Expr><Const>inserisci il primo numero    </Const>string</Expr><Expr><ID>a null out: false</ID>id</Expr><Expr><Const>inserisci il secondo numero    </Const>string</Expr><Expr><ID>b null out: false</ID>id</Expr></Read><Assign><ID>result null out: false</ID><ID>a null out: false</ID><Expr><FunCall>calculate<Expr><ID>a null out: false</ID>id</Expr><Expr><ID>b null out: false</ID>id</Expr><Expr><ID>op null out: false</ID>id</Expr></FunCall>funcall</Expr></Assign><Write><Expr><Const>Il risultato è </Const>string</Expr><Expr><ID>result null out: false</ID>id</Expr>new line: true</Write><While><Expr><Expr><Expr><ID>z null out: false</ID>id</Expr>lt<Expr><Const>0</Const>integer</Expr></Expr>or<Expr><Expr><ID>z null out: false</ID>id</Expr>gt<Expr><Const>1</Const>integer</Expr></Expr></Expr><Body><Read><Expr><Const>Vuoi continuare? (0: no, 1: sì)    </Const>string</Expr><Expr><ID>z null out: false</ID>id</Expr></Read><If><Expr><Expr><ID>z null out: false</ID>id</Expr>eq<Expr><Const>0</Const>integer</Expr></Expr><Body><Assign><ID>continue null out: false</ID><Expr><Const>false</Const>false</Expr></Assign></Body></If></Body></While><Assign><ID>z null out: false</ID><Expr><Const>2</Const>integer</Expr></Assign></Body></While></Body></Procedure></Procedures></Program>